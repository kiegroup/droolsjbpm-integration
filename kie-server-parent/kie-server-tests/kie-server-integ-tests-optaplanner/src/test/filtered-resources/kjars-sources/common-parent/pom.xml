<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.kie.server.testing</groupId>
  <artifactId>common-parent</artifactId>
  <version>1.0.0.Final</version>
  <packaging>pom</packaging>

  <properties>
    <!-- The version is set during the Maven build (this file is a filtered resource) -->
    <version.org.kie>${version.org.kie}</version.org.kie>
    <version.org.codehaus.jackson>${version.org.codehaus.jackson}</version.org.codehaus.jackson>
    <version.org.javassist>${version.org.javassist}</version.org.javassist>
    <version.jakarta.xml.bind-api>${version.jakarta.xml.bind-api}</version.jakarta.xml.bind-api>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Need to use javassist artifact version provided by jboss-integration-platform-parent.
           javassist artifact is provided by reflections artifact, which is brought by optaplanner-core.
           Productized reflections artifact define javassist version, which is missing in product repositories.
           jboss-integration-platform-parent redefine javassist version to one, which is available in repositories.
           Because this optaplanner test kjar is independent from jboss-integration-platform-parent then we have to redefine javassist version to be able to run product tests.
           This could be deleted when product repositories will contain javassist version used in reflections artifact. -->
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${version.org.javassist}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${version.jakarta.xml.bind-api}</version>
      </dependency>
      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-model-compiler</artifactId>
        <version>${version.org.kie}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.kie</groupId>
          <artifactId>kie-maven-plugin</artifactId>
          <version>${version.org.kie}</version>
          <extensions>true</extensions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <!-- Needed to download the Drools/jBPM SNAPSHOTs during build -->
      <id>jboss-public-repo</id>
      <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <!-- Needed to download the kie-maven-plugin SNAPSHOT during build -->
      <id>jboss-public-repo</id>
      <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>remote-testing-repo</id>
      <url>${kie.server.testing.remote.repo.url}</url>
    </repository>
    <snapshotRepository>
      <id>remote-testing-repo</id>
      <url>${kie.server.testing.remote.repo.url}</url>
    </snapshotRepository>
  </distributionManagement>
</project>
