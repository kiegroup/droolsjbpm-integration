{
  "filters": {
    "revapi": {
      "java": {
        "_comment": "Only classes with javax.ws.rs annotations are included since we want to check only REST API.",
        "filter": {
          "packages": {
            "regex": true,
            "comment": "We don't want to check transitive classes, e.g. from kie-server-api, since we already check them in their own module.",
            "include": [
              "org\\.kie\\.server\\.remote\\.rest\\.common.*"
            ],
            "exclude": [
              "org\\.kie\\.server\\.remote\\.rest\\.common\\.util"
            ]
          },
          "_comment": "Classes are excluded, not included, so new classes in future are discovered by revapi.",
          "classes": {
            "regex": false,
            "exclude": [
              "org.kie.server.remote.rest.common.Header",
              "org.kie.server.remote.rest.common.KieServerApplication",
              "org.kie.server.remote.rest.common.KieServerRestApplicationComponentService"
            ]
          }
        }
      }
    }
  },

  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.52.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::activateContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::activateContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be activated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be activated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be activated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "activateContainer",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::createContainer(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::createContainer(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be created\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be created\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be created\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"STARTED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "createContainer",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::deactivateContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::deactivateContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be deactivated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"DEACTIVATED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be deactivated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"DEACTIVATED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"container could not be deactivated\"), @io.swagger.annotations.ApiResponse(code = 201, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully deployed with module com.redhat:Project1:1.0.\",\n      \"result\": {\n        \"kie-container\": {\n          \"container-id\": \"MyProjectContainer\",\n          \"release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"resolved-release-id\": {\n            \"artifact-id\": \"Project1\",\n            \"group-id\": \"com.redhat\",\n            \"version\": \"1.0\"\n          },\n          \"status\": \"DEACTIVATED\",\n          \"scanner\": {\n            \"status\": \"DISPOSED\",\n            \"poll-interval\": null\n          },\n          \"config-items\": [\n\n          ],\n          \"messages\": [\n            {\n              \"severity\": \"INFO\",\n              \"timestamp\": {\n                \"java.util.Date\": 1538756503852\n              },\n              \"content\": [\n                \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n              ]\n            }\n          ],\n          \"container-alias\": null\n        }\n      }\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "deactivateContainer",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::disposeContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::disposeContainer(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully disposed.\",\n      \"result\": null\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully disposed.\",\n      \"result\": null\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"Container MyProjectContainer successfully disposed.\",\n      \"result\": null\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "disposeContainer",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::listContainers(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::listContainers(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"List of created containers\",\n      \"result\": {\n        \"kie-containers\": {\n          \"kie-container\": [\n            {\n              \"container-id\": \"MyProjectContainer\",\n              \"release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1538996205681\n                  },\n                  \"content\": [\n                    \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"MyProjectContainer\"\n            },\n            {\n              \"container-id\": \"employe-rostering\",\n              \"release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1539029260330\n                  },\n                  \"content\": [\n                    \"Container employee-rostering successfully created with module employeerostering:employeerostering:1.0.0-SNAPSHOT.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"employeerostering\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"List of created containers\",\n      \"result\": {\n        \"kie-containers\": {\n          \"kie-container\": [\n            {\n              \"container-id\": \"MyProjectContainer\",\n              \"release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1538996205681\n                  },\n                  \"content\": [\n                    \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"MyProjectContainer\"\n            },\n            {\n              \"container-id\": \"employe-rostering\",\n              \"release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1539029260330\n                  },\n                  \"content\": [\n                    \"Container employee-rostering successfully created with module employeerostering:employeerostering:1.0.0-SNAPSHOT.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"employeerostering\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\",\n      \"msg\": \"List of created containers\",\n      \"result\": {\n        \"kie-containers\": {\n          \"kie-container\": [\n            {\n              \"container-id\": \"MyProjectContainer\",\n              \"release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"com.redhat\",\n                \"artifact-id\": \"Project1\",\n                \"version\": \"1.0\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1538996205681\n                  },\n                  \"content\": [\n                    \"Container MyProjectContainer successfully created with module com.redhat:Project1:1.0.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"MyProjectContainer\"\n            },\n            {\n              \"container-id\": \"employe-rostering\",\n              \"release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"resolved-release-id\": {\n                \"group-id\": \"employeerostering\",\n                \"artifact-id\": \"employeerostering\",\n                \"version\": \"1.0.0-SNAPSHOT\"\n              },\n              \"status\": \"STARTED\",\n              \"scanner\": {\n                \"status\": \"DISPOSED\",\n                \"poll-interval\": null\n              },\n              \"config-items\": [\n                {\n                  \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"KSession\",\n                  \"itemValue\": \"\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n                },\n                {\n                  \"itemName\": \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\",\n                  \"itemType\": \"BPM\"\n                }\n              ],\n              \"messages\": [\n                {\n                  \"severity\": \"INFO\",\n                  \"timestamp\": {\n                    \"java.util.Date\": 1539029260330\n                  },\n                  \"content\": [\n                    \"Container employee-rostering successfully created with module employeerostering:employeerostering:1.0.0-SNAPSHOT.\"\n                  ]\n                }\n              ],\n              \"container-alias\": \"employeerostering\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "listContainers",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::updateReleaseId(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.common.resource.KieServerRestImpl::updateReleaseId(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"-type\": \"SUCCESS\",\n      \"-msg\": \"Release id successfully updated.\",\n      \"release-id\": {\n        \"artifact-id\": \"Project1\",\n        \"group-id\": \"com.redhat\",\n        \"version\": \"1.1\"\n      }\n    }\n  ]\n}\")}))})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successfull response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"-type\": \"SUCCESS\",\n      \"-msg\": \"Release id successfully updated.\",\n      \"release-id\": {\n        \"artifact-id\": \"Project1\",\n        \"group-id\": \"com.redhat\",\n        \"version\": \"1.1\"\n      }\n    }\n  ]\n}\")}))}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 200, response = org.kie.server.api.model.ServiceResponse.class, message = \"Successful response\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"response\": [\n    {\n      \"-type\": \"SUCCESS\",\n      \"-msg\": \"Release id successfully updated.\",\n      \"release-id\": {\n        \"artifact-id\": \"Project1\",\n        \"group-id\": \"com.redhat\",\n        \"version\": \"1.1\"\n      }\n    }\n  ]\n}\")}))}",
          "package": "org.kie.server.remote.rest.common.resource",
          "classSimpleName": "KieServerRestImpl",
          "methodName": "updateReleaseId",
          "elementKind": "method",
          "justification": "[JBPM-9610] Fix typos in successful call messages"
        }
      ]
    }
  }
}
