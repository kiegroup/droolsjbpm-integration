{
  "filters": {
    "revapi": {
      "java": {
        "_comment": "Only classes with javax.ws.rs annotations are included since we want to check only REST API.",
        "filter": {
          "_comment": "We don't want to check transitive classes, e.g. from package org.kie.server.controller.api, since we already check them in their own module.",
          "packages": {
            "regex": false,
            "include": [
              "org.kie.server.controller.rest"
            ]
          },
          "classes": {
            "regex": false,
            "exclude": [
              "org.kie.server.controller.rest.ControllerUtils"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.74.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::getServerTemplate(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::getServerTemplate(javax.ws.rs.core.HttpHeaders, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server template\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\" ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template>\n   <server-id>test-kie-server<\/server-id>\n   <server-name>test-kie-server<\/server-name>\n   <container-specs>\n       <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n       <container-name>evaluation<\/container-name>\n       <server-template-key>\n           <server-id>test-kie-server<\/server-id>\n           <server-name>test-kie-server<\/server-name>\n       <\/server-template-key>\n       <release-id>\n           <artifact-id>evaluation<\/artifact-id>\n           <group-id>evaluation<\/group-id>\n           <version>1.0.0-SNAPSHOT<\/version>\n       <\/release-id>\n       <configs>\n           <entry>\n               <key>PROCESS<\/key>\n               <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                   <kbase><\/kbase>\n                   <ksession><\/ksession>\n                   <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n               <\/value>\n           <\/entry>\n           <entry>\n               <key>RULE<\/key>\n               <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <scannerStatus>STOPPED<\/scannerStatus>\n               <\/value>\n           <\/entry>\n       <\/configs>\n       <status>STARTED<\/status>\n   <\/container-specs>\n   <configs\/>\n   <server-instances>\n       <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n       <server-name>test-kie-server@localhost:8080<\/server-name>\n       <server-template-id>test-kie-server<\/server-template-id>\n       <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n   <\/server-instances>\n   <capabilities>RULE<\/capabilities>\n   <capabilities>PROCESS<\/capabilities>\n<\/server-template>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server template\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\", \"PLANNING\" ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template>\n   <server-id>test-kie-server<\/server-id>\n   <server-name>test-kie-server<\/server-name>\n   <container-specs>\n       <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n       <container-name>evaluation<\/container-name>\n       <server-template-key>\n           <server-id>test-kie-server<\/server-id>\n           <server-name>test-kie-server<\/server-name>\n       <\/server-template-key>\n       <release-id>\n           <artifact-id>evaluation<\/artifact-id>\n           <group-id>evaluation<\/group-id>\n           <version>1.0.0-SNAPSHOT<\/version>\n       <\/release-id>\n       <configs>\n           <entry>\n               <key>PROCESS<\/key>\n               <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                   <kbase><\/kbase>\n                   <ksession><\/ksession>\n                   <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n               <\/value>\n           <\/entry>\n           <entry>\n               <key>RULE<\/key>\n               <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <scannerStatus>STOPPED<\/scannerStatus>\n               <\/value>\n           <\/entry>\n       <\/configs>\n       <status>STARTED<\/status>\n   <\/container-specs>\n   <configs\/>\n   <server-instances>\n       <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n       <server-name>test-kie-server@localhost:8080<\/server-name>\n       <server-template-id>test-kie-server<\/server-template-id>\n       <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n   <\/server-instances>\n   <capabilities>RULE<\/capabilities>\n   <capabilities>PROCESS<\/capabilities>\n   <capabilities>PLANNING<\/capabilities>\n<\/server-template>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server template\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\" ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template>\n   <server-id>test-kie-server<\/server-id>\n   <server-name>test-kie-server<\/server-name>\n   <container-specs>\n       <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n       <container-name>evaluation<\/container-name>\n       <server-template-key>\n           <server-id>test-kie-server<\/server-id>\n           <server-name>test-kie-server<\/server-name>\n       <\/server-template-key>\n       <release-id>\n           <artifact-id>evaluation<\/artifact-id>\n           <group-id>evaluation<\/group-id>\n           <version>1.0.0-SNAPSHOT<\/version>\n       <\/release-id>\n       <configs>\n           <entry>\n               <key>PROCESS<\/key>\n               <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                   <kbase><\/kbase>\n                   <ksession><\/ksession>\n                   <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n               <\/value>\n           <\/entry>\n           <entry>\n               <key>RULE<\/key>\n               <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                   <scannerStatus>STOPPED<\/scannerStatus>\n               <\/value>\n           <\/entry>\n       <\/configs>\n       <status>STARTED<\/status>\n   <\/container-specs>\n   <configs\/>\n   <server-instances>\n       <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n       <server-name>test-kie-server@localhost:8080<\/server-name>\n       <server-template-id>test-kie-server<\/server-template-id>\n       <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n   <\/server-instances>\n   <capabilities>RULE<\/capabilities>\n   <capabilities>PROCESS<\/capabilities>\n<\/server-template>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")}",
          "package": "org.kie.server.controller.rest",
          "classSimpleName": "RestSpecManagementServiceImpl",
          "methodName": "getServerTemplate",
          "elementKind": "method",
          "justification": "OptaPlanner extension removed."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::listServerTemplates(javax.ws.rs.core.HttpHeaders)",
          "new": "method javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::listServerTemplates(javax.ws.rs.core.HttpHeaders)",
          "annotationType": "io.swagger.annotations.ApiResponses",
          "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server templates\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-template\" : [ {\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\" ]\n   } ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-list>\n    <server-template>\n        <server-id>test-kie-server<\/server-id>\n        <server-name>test-kie-server<\/server-name>\n        <container-specs>\n            <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n            <container-name>evaluation<\/container-name>\n            <server-template-key>\n                <server-id>test-kie-server<\/server-id>\n                <server-name>test-kie-server<\/server-name>\n            <\/server-template-key>\n            <release-id>\n                <artifact-id>evaluation<\/artifact-id>\n                <group-id>evaluation<\/group-id>\n                <version>1.0.0-SNAPSHOT<\/version>\n            <\/release-id>\n            <configs>\n                <entry>\n                    <key>PROCESS<\/key>\n                    <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                        <kbase><\/kbase>\n                        <ksession><\/ksession>\n                        <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n                    <\/value>\n                <\/entry>\n                <entry>\n                    <key>RULE<\/key>\n                    <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <scannerStatus>STOPPED<\/scannerStatus>\n                    <\/value>\n                <\/entry>\n            <\/configs>\n            <status>STARTED<\/status>\n        <\/container-specs>\n        <configs\/>\n        <server-instances>\n            <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n            <server-name>test-kie-server@localhost:8080<\/server-name>\n            <server-template-id>test-kie-server<\/server-template-id>\n            <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n        <\/server-instances>\n        <capabilities>RULE<\/capabilities>\n        <capabilities>PROCESS<\/capabilities>\n    <\/server-template>\n<\/server-template-list>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")})",
          "attribute": "value",
          "oldValue": "{@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server templates\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-template\" : [ {\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\", \"PLANNING\" ]\n   } ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-list>\n    <server-template>\n        <server-id>test-kie-server<\/server-id>\n        <server-name>test-kie-server<\/server-name>\n        <container-specs>\n            <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n            <container-name>evaluation<\/container-name>\n            <server-template-key>\n                <server-id>test-kie-server<\/server-id>\n                <server-name>test-kie-server<\/server-name>\n            <\/server-template-key>\n            <release-id>\n                <artifact-id>evaluation<\/artifact-id>\n                <group-id>evaluation<\/group-id>\n                <version>1.0.0-SNAPSHOT<\/version>\n            <\/release-id>\n            <configs>\n                <entry>\n                    <key>PROCESS<\/key>\n                    <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                        <kbase><\/kbase>\n                        <ksession><\/ksession>\n                        <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n                    <\/value>\n                <\/entry>\n                <entry>\n                    <key>RULE<\/key>\n                    <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <scannerStatus>STOPPED<\/scannerStatus>\n                    <\/value>\n                <\/entry>\n            <\/configs>\n            <status>STARTED<\/status>\n        <\/container-specs>\n        <configs\/>\n        <server-instances>\n            <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n            <server-name>test-kie-server@localhost:8080<\/server-name>\n            <server-template-id>test-kie-server<\/server-template-id>\n            <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n        <\/server-instances>\n        <capabilities>RULE<\/capabilities>\n        <capabilities>PROCESS<\/capabilities>\n        <capabilities>PLANNING<\/capabilities>\n    <\/server-template>\n<\/server-template-list>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")}",
          "newValue": "{@io.swagger.annotations.ApiResponse(code = 200, message = \"KIE Server templates\", examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-template\" : [ {\n       \"server-id\" : \"test-kie-server\",\n       \"server-name\" : \"test-kie-server\",\n       \"container-specs\" : [ {\n           \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n           \"container-name\" : \"evaluation\",\n              \"server-template-key\" : {\n                   \"server-id\" : \"test-kie-server\",\n                   \"server-name\" : \"test-kie-server\"\n               },\n           \"release-id\" : {\n                   \"group-id\" : \"evaluation\",\n                   \"artifact-id\" : \"evaluation\",\n                   \"version\" : \"1.0.0-SNAPSHOT\"\n           },\n           \"configuration\" : {\n                   \"PROCESS\" : {\n                       \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n                               \"runtimeStrategy\" : \"SINGLETON\",\n                               \"kbase\" : \"\",\n                               \"ksession\" : \"\",\n                               \"mergeMode\" : \"MERGE_COLLECTIONS\"\n                       }\n                   },\n                   \"RULE\" : {\n                       \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n                           \"pollInterval\" : null,\n                           \"scannerStatus\" : \"STOPPED\"\n                       }\n                   }\n           },\n           \"status\" : \"STARTED\"\n       } ],\n       \"server-config\" : { },\n       \"server-instances\" : [ {\n               \"server-instance-id\" : \"test-kie-server@localhost:8080\",\n                       \"server-name\" : \"test-kie-server@localhost:8080\",\n                       \"server-template-id\" : \"test-kie-server\",\n                       \"server-url\" : \"http:\/\/localhost:8080\/kie-server\/services\/rest\/server\"\n               } ],\n       \"capabilities\" : [ \"RULE\", \"PROCESS\" ]\n   } ]\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-list>\n    <server-template>\n        <server-id>test-kie-server<\/server-id>\n        <server-name>test-kie-server<\/server-name>\n        <container-specs>\n            <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n            <container-name>evaluation<\/container-name>\n            <server-template-key>\n                <server-id>test-kie-server<\/server-id>\n                <server-name>test-kie-server<\/server-name>\n            <\/server-template-key>\n            <release-id>\n                <artifact-id>evaluation<\/artifact-id>\n                <group-id>evaluation<\/group-id>\n                <version>1.0.0-SNAPSHOT<\/version>\n            <\/release-id>\n            <configs>\n                <entry>\n                    <key>PROCESS<\/key>\n                    <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                        <kbase><\/kbase>\n                        <ksession><\/ksession>\n                        <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n                    <\/value>\n                <\/entry>\n                <entry>\n                    <key>RULE<\/key>\n                    <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                        <scannerStatus>STOPPED<\/scannerStatus>\n                    <\/value>\n                <\/entry>\n            <\/configs>\n            <status>STARTED<\/status>\n        <\/container-specs>\n        <configs\/>\n        <server-instances>\n            <server-instance-id>test-kie-server@localhost:8080<\/server-instance-id>\n            <server-name>test-kie-server@localhost:8080<\/server-name>\n            <server-template-id>test-kie-server<\/server-template-id>\n            <server-url>http:\/\/localhost:8080\/kie-server\/services\/rest\/server<\/server-url>\n        <\/server-instances>\n        <capabilities>RULE<\/capabilities>\n        <capabilities>PROCESS<\/capabilities>\n    <\/server-template>\n<\/server-template-list>\")})), @io.swagger.annotations.ApiResponse(code = 404, message = \"KIE Server template not found\"), @io.swagger.annotations.ApiResponse(code = 400, message = \"Controller exception\"), @io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected\")}",
          "package": "org.kie.server.controller.rest",
          "classSimpleName": "RestSpecManagementServiceImpl",
          "methodName": "listServerTemplates",
          "elementKind": "method",
          "justification": "OptaPlanner extension removed."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::saveContainerSpec(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, ===java.lang.String===, javax.ws.rs.core.UriInfo)",
          "new": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::saveContainerSpec(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, ===java.lang.String===, javax.ws.rs.core.UriInfo)",
          "annotationType": "io.swagger.annotations.ApiParam",
          "annotation": "@io.swagger.annotations.ApiParam(name = \"body\", value = \"A map containing the container-name, relevant release-id (group ID, artifact ID, and version), configuration specifications (rule, process), and other components of the new KIE container\", required = true, examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"container-id\" : \"evaluation_1.0.0-SNAPSHOT\",\n  \"container-name\" : \"evaluation\",\n  \"server-template-key\" : null,\n  \"release-id\" : {\n    \"group-id\" : \"evaluation\",\n    \"artifact-id\" : \"evaluation\",\n    \"version\" : \"1.0.0-SNAPSHOT\"\n  },\n  \"configuration\" : {\n    \"RULE\" : {\n      \"org.kie.server.controller.api.model.spec.RuleConfig\" : {\n        \"pollInterval\" : null,\n        \"scannerStatus\" : \"STOPPED\"\n      }\n    },\n    \"PROCESS\" : {\n      \"org.kie.server.controller.api.model.spec.ProcessConfig\" : {\n        \"runtimeStrategy\" : \"SINGLETON\",\n        \"kbase\" : \"\",\n        \"ksession\" : \"\",\n        \"mergeMode\" : \"MERGE_COLLECTIONS\"\n      }\n    }\n  },\n  \"status\" : \"STARTED\"\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<container-spec-details>\n    <container-id>evaluation_1.0.0-SNAPSHOT<\/container-id>\n    <container-name>evaluation<\/container-name>\n    <release-id>\n        <artifact-id>evaluation<\/artifact-id>\n        <group-id>evaluation<\/group-id>\n        <version>1.0.0-SNAPSHOT<\/version>\n    <\/release-id>\n    <configs>\n        <entry>\n            <key>RULE<\/key>\n            <value xsi:type=\"ruleConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                <scannerStatus>STOPPED<\/scannerStatus>\n            <\/value>\n        <\/entry>\n        <entry>\n            <key>PROCESS<\/key>\n            <value xsi:type=\"processConfig\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n                <runtimeStrategy>SINGLETON<\/runtimeStrategy>\n                <kbase><\/kbase>\n                <ksession><\/ksession>\n                <mergeMode>MERGE_COLLECTIONS<\/mergeMode>\n            <\/value>\n        <\/entry>\n    <\/configs>\n    <status>STARTED<\/status>\n<\/container-spec-details>\")}))",
          "attribute": "value",
          "oldValue": "\"A map containing the container-name, relevant release-id (group ID, artifact ID, and version), configuration specifications (rule, process, planning), and other components of the new KIE container\"",
          "newValue": "\"A map containing the container-name, relevant release-id (group ID, artifact ID, and version), configuration specifications (rule, process), and other components of the new KIE container\"",
          "package": "org.kie.server.controller.rest",
          "classSimpleName": "RestSpecManagementServiceImpl",
          "methodName": "saveContainerSpec",
          "parameterIndex": "3",
          "elementKind": "parameter",
          "justification": "OptaPlanner extension removed."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::saveServerTemplate(javax.ws.rs.core.HttpHeaders, java.lang.String, ===java.lang.String===, javax.ws.rs.core.UriInfo)",
          "new": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::saveServerTemplate(javax.ws.rs.core.HttpHeaders, java.lang.String, ===java.lang.String===, javax.ws.rs.core.UriInfo)",
          "annotationType": "io.swagger.annotations.ApiParam",
          "annotation": "@io.swagger.annotations.ApiParam(name = \"body\", value = \"A map containing the server-name, capabilities, and other components of the new KIE Server template\", required = true, examples = @io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-id\" : \"sample-server\",\n  \"server-name\" : \"sample-server\",\n  \"capabilities\" : [\n       \"RULE\",       \"PROCESS\"    ],\n  \"container-specs\" : [ ],\n  \"server-config\" : { }\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-details>\n  <server-id>sample-server<\/server-id>\n  <server-name>sample-server<\/server-name>\n  <configs\/>\n  <capabilities>RULE<\/capabilities>\n  <capabilities>PROCESS<\/capabilities>\n<\/server-template-details>\")}))",
          "attribute": "examples",
          "oldValue": "@io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-id\" : \"sample-server\",\n  \"server-name\" : \"sample-server\",\n  \"capabilities\" : [\n       \"RULE\",       \"PROCESS\",       \"PLANNING\"    ],\n  \"container-specs\" : [ ],\n  \"server-config\" : { }\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-details>\n  <server-id>sample-server<\/server-id>\n  <server-name>sample-server<\/server-name>\n  <configs\/>\n  <capabilities>RULE<\/capabilities>\n  <capabilities>PROCESS<\/capabilities>\n  <capabilities>PLANNING<\/capabilities>\n<\/server-template-details>\")})",
          "newValue": "@io.swagger.annotations.Example({@io.swagger.annotations.ExampleProperty(mediaType = \"application\/json\", value = \"{\n  \"server-id\" : \"sample-server\",\n  \"server-name\" : \"sample-server\",\n  \"capabilities\" : [\n       \"RULE\",       \"PROCESS\"    ],\n  \"container-specs\" : [ ],\n  \"server-config\" : { }\n}\"), @io.swagger.annotations.ExampleProperty(mediaType = \"application\/xml\", value = \"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<server-template-details>\n  <server-id>sample-server<\/server-id>\n  <server-name>sample-server<\/server-name>\n  <configs\/>\n  <capabilities>RULE<\/capabilities>\n  <capabilities>PROCESS<\/capabilities>\n<\/server-template-details>\")})",
          "package": "org.kie.server.controller.rest",
          "classSimpleName": "RestSpecManagementServiceImpl",
          "methodName": "saveServerTemplate",
          "parameterIndex": "2",
          "elementKind": "parameter",
          "justification": "OptaPlanner extension removed."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::updateContainerConfig(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, ===java.lang.String===, java.lang.String)",
          "new": "parameter javax.ws.rs.core.Response org.kie.server.controller.rest.RestSpecManagementServiceImpl::updateContainerConfig(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, ===java.lang.String===, java.lang.String)",
          "annotationType": "io.swagger.annotations.ApiParam",
          "annotation": "@io.swagger.annotations.ApiParam(name = \"capability\", value = \"KIE container capability to be applied (RULE, or PROCESS, case sensitive)\", required = true, example = \"PROCESS\")",
          "attribute": "value",
          "oldValue": "\"KIE container capability to be applied (RULE, PROCESS, or PLANNING, case sensitive)\"",
          "newValue": "\"KIE container capability to be applied (RULE, or PROCESS, case sensitive)\"",
          "package": "org.kie.server.controller.rest",
          "classSimpleName": "RestSpecManagementServiceImpl",
          "methodName": "updateContainerConfig",
          "parameterIndex": "3",
          "elementKind": "parameter",
          "justification": "OptaPlanner extension removed."
        }
      ]
    }
  }
}
